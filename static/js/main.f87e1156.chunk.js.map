{"version":3,"sources":["ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","ContactItem/ContactItem.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameId","shortid","numberId","handleChangeName","e","setState","target","value","handleChangeNumber","handleSubmit","preventDefault","banOnAddingDuplicateContact","props","resetForm","id","this","className","onSubmit","htmlFor","type","onChange","pattern","title","required","Component","Filter","filterId","handleChangeFilter","ContactList","children","ContactItem","filter","contacts","deleteContact","map","onClick","toLowerCase","includes","App","addNewContact","contact","prevState","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f87e1156.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport shortid from 'shortid';\r\nimport './ContactForm.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    nameId = shortid();\r\n    numberId = shortid();\r\n    \r\n    handleChangeName = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChangeNumber = (e) => {\r\n        this.setState({\r\n            number: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { banOnAddingDuplicateContact } = this.props\r\n        const { name, number } = this.state\r\n        const { resetForm } = this\r\n        \r\n        const contact = {\r\n            id: shortid(),\r\n            name,\r\n            number\r\n        }\r\n        \r\n        banOnAddingDuplicateContact(contact)\r\n        resetForm()\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n        \r\n    render() {\r\n\r\n        const { handleSubmit, handleChangeName, handleChangeNumber, nameId, numberId } = this\r\n        const { name, number } = this.state\r\n        return (\r\n            <form className=\"contact-form\" onSubmit={handleSubmit}>\r\n                <label className=\"label\" htmlFor={nameId}>Enter name</label>\r\n                <input\r\n                    id={nameId}\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleChangeName}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n                <label className=\"label\" htmlFor={numberId}>Enter number</label>\r\n                <input\r\n                    id={numberId}\r\n                    type=\"tel\"\r\n                    className=\"input\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    onChange={handleChangeNumber}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n                <button type=\"submit\" className=\"contact-button\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    banOnAddingDuplicateContact: PropTypes.func\r\n}\r\n\r\nexport default ContactForm","import PropTypes from 'prop-types';\r\nimport './Filter.css'\r\n\r\nconst Filter = ({ filterId, handleChangeFilter }) => {\r\n    return (\r\n        <div className=\"filter-container\">\r\n            <label className=\"label\" htmlFor={filterId}>Find contacts by name</label>\r\n            <input className=\"input\" id={filterId} type=\"text\" name=\"filter\" onChange={handleChangeFilter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    filterId: PropTypes.string,\r\n    handleChangeFilter: PropTypes.func\r\n}\r\n\r\nexport default Filter","import './ContactList.css'\r\n\r\nconst ContactList = ({ children }) => {\r\n    return (\r\n        <ul className=\"contact-list\">\r\n            {children}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList","import PropTypes from 'prop-types';\r\nimport './ContactItem.css'\r\n\r\nconst ContactItem = ({ filter, contacts, deleteContact }) => {\r\n    return (\r\n        <>\r\n            {filter === '' ?\r\n                contacts.map(({ id, name, number }) => (\r\n                    <li key={id}>\r\n                        {name}: {number}\r\n                        <button type=\"button\" className=\"delete-button\" onClick={() => deleteContact(id)}>Delete</button>\r\n                    </li>\r\n                )) :\r\n                contacts.map(\r\n                    ({ id, name, number }) =>\r\n                        name.toLowerCase().includes(filter.toLowerCase()) &&\r\n                        (\r\n                            <li key={id}>\r\n                                {name}: {number}\r\n                                <button type=\"button\" className=\"delete-button\" onClick={() => deleteContact(id)}>Delete</button>\r\n                            </li>\r\n                        )\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nContactItem.propTypes = {\r\n    filter: PropTypes.string,\r\n    contacts: PropTypes.array,\r\n    deleteContact: PropTypes.func\r\n}\r\n\r\nexport default ContactItem","import { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport ContactItem from './ContactItem/ContactItem';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n       {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n\n  filterId = shortid()\n  \n  addNewContact = (contact) => {\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact]\n      }\n     })\n  }\n\n  banOnAddingDuplicateContact = (value) => {\n    this.state.contacts.map(contact => contact.name).includes(value.name) ?\n      alert(`${value.name} is already in contacts`) :\n      this.addNewContact(value);\n  }\n\n  handleChangeFilter = (e) => {\n    this.setState({\n      filter: e.target.value\n    })\n  }\n\n  deleteContact = (id) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  }\n  \n  render() {\n\n    const { banOnAddingDuplicateContact, handleChangeFilter, deleteContact, filterId } = this\n    const {filter, contacts} = this.state\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n\n        <ContactForm\n          banOnAddingDuplicateContact={banOnAddingDuplicateContact}>\n        </ContactForm>\n\n        <h2>Contacts</h2>\n\n        <Filter\n          filterId={filterId}\n          handleChangeFilter={handleChangeFilter}>\n        </Filter>\n\n        <ContactList>\n          <ContactItem\n            filter={filter}\n            contacts={contacts}\n            deleteContact={deleteContact}>\n          </ContactItem>\n        </ContactList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}